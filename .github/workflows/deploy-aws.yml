name: Deploy to AWS EKS

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'database/'
      - '.github/workflows/deploy-aws.yml'

jobs:   
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the Repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Install AWS CLI, Kubectl, and eksctl
    - name: Install AWS CLI, Kubectl, and eksctl
      run: |
        # AWS CLI installation (update if exists)
        if ! command -v aws &> /dev/null; then
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        else
          echo "AWS CLI is already installed."
        fi
        
        # Install Kubectl
        sudo apt-get update && sudo apt-get install -y curl unzip
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

        # Install eksctl
        if ! command -v eksctl &> /dev/null; then
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.142.0/eksctl_Linux_amd64.tar.gz" -o eksctl_Linux_amd64.tar.gz
          tar -xvzf eksctl_Linux_amd64.tar.gz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
        else
          echo "eksctl is already installed."
        fi

    # 3. Set up AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # 4. Create EKS Cluster
    - name: Create EKS Cluster
      run: |
        eksctl create cluster \
        --name mern-cluster \
        --region us-east-1 \
        --nodegroup-name standard-workers \
        --node-type t3.medium \
        --nodes 2 \
        --managed

        # Wait for the EKS cluster to be active
        aws eks wait cluster-active --name mern-cluster --region us-east-1

    # 5. Set up kubeconfig for kubectl
    - name: Update kubeconfig
      run: aws eks --region us-east-1 update-kubeconfig --name mern-cluster

    # 6. Deploy MongoDB (Optional step)
    - name: Deploy MongoDB
      run: |
        kubectl create ns mern-stack || true
        kubectl apply -f database/mongodb-deployment.yml
        kubectl apply -f database/mongodb-headless-service.yml
        kubectl apply -f database/mongodb-pvc.yml
        kubectl apply -f database/mongodb-secret.yml

    # 7. Deploy Backend
    - name: Deploy Backend
      run: |
        kubectl apply -f manifest/mongo-config.yml
        kubectl apply -f manifest/backend-deployment.yml
        kubectl apply -f manifest/backend-service.yml

    # 8. Deploy Frontend
    - name: Deploy Frontend
      run: |
        kubectl apply -f manifest/frontend-deployment.yml
        kubectl apply -f manifest/frontend-service.yml

  
